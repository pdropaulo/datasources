WITH SIGET_RS0 AS (
        SELECT
            RS0.COD_CGF,
            MAX(RS0.NUM_PAM) NUM_PAM,
            MAX(RS0.SEQ_DOCUMENTO_NOTIFICACAO) SEQ_DOCUMENTO_NOTIFICACAO,
            MAX(CASE WHEN ((RS0.SEQ_DOCUMENTO_NOTIFICACAO = -1) OR NOT (RS0.DAT_CANCELAMENTO IS NULL)) THEN 0 ELSE 1 END) SIT_CONTRIB_NOTIFICADO,
            MAX(CASE WHEN RS0.COD_TIPO_PAM = 1 THEN 1 ELSE 0 END) 'Monitoramento Fiscal Padrão',
            MAX(CASE WHEN RS0.COD_TIPO_PAM = 2 THEN 1 ELSE 0 END) 'Monitoramento Fiscal Maiores Contribuintes',
            MAX(CASE WHEN RS0.COD_TIPO_PAM = 3 THEN 1 WHEN RS0.COD_TIPO_PAM = 7 THEN 1 ELSE 0 END) 'Monitoramento Especial',
            MAX(CASE WHEN RS0.COD_TIPO_PAM = 4 THEN 1 ELSE 0 END) 'Monitoramento Fiscal COMEX',    
            MAX(CASE WHEN RS0.COD_TIPO_PAM = 6 THEN 1 ELSE 0 END) 'Monitoramento Fiscal FDI',
            MAX(CASE WHEN RS0.COD_TIPO_PAM = 9 THEN 1 ELSE 0 END) 'Monitoramento Fiscal CEARF',
            MAX(CASE WHEN RS0.COD_TIPO_PAM < 1 THEN 1 ELSE 0 END) 'Não se aplica',
            MAX(CASE WHEN ((RS0.COD_TIPO_PAM IN (5, 8)) OR (RS0.COD_TIPO_PAM > 9)) THEN 1 ELSE 0 END) 'Não classificado'
        FROM (
            SELECT
                F.COD_CGF,
                PRJ.COD_TIPO_PAM,
                -- F.COD_MON_PLAN_EMPR,   
                -- TN.COD_DOCUMENTO,
                TN.DAT_CANCELAMENTO,                
                RANK() OVER(PARTITION BY F.COD_CGF ORDER BY (CAST(F.COD_MON_PLAN_EMPR AS NUMERIC(12,0)) + TN.COD_DOCUMENTO) DESC) RK01,
                CASE WHEN RK01 = 1 THEN CAST(F.COD_MON_PLAN_EMPR AS NUMERIC(12,0)) ELSE 0 END NUM_PAM,
                CASE WHEN RK01 = 1 THEN F.SEQ_DOCUMENTO_NOTIFICACAO ELSE -1 END SEQ_DOCUMENTO_NOTIFICACAO
            FROM DMT_MONITORAMENTO_FISCAL.F_MONIT_SIT_ATUAL F
            INNER JOIN
                DMT_MONITORAMENTO_FISCAL.D_MON_PLANEJAMENTO PRJ
                ON (PRJ.SEQ_MON_PLANEJAMENTO = F.SEQ_MON_PLANEJAMENTO)
            INNER JOIN
                DMT_MONITORAMENTO_FISCAL.D_SITUACAO_MONITORAMENTO SIT_MON
                ON (SIT_MON.SEQ_SITUAC_MONITORAMENTO = F.SEQ_SITUACAO_EMPRESA)  
            INNER JOIN 
                DMT_MONITORAMENTO_FISCAL.D_DOC_MONITORAMENTO TN 
                ON (TN.SEQ_DOCUMENTO = F.SEQ_DOCUMENTO_NOTIFICACAO)
            WHERE
                SIT_MON.COD_SITUAC_MONITORAMENTO IN (4, 10)
        ) RS0
        GROUP BY RS0.COD_CGF
    ),
    SIGET AS (
        SELECT
            SIGET_RS0.*,
            TN.COD_DOCUMENTO NUM_TN,
            CASE WHEN SIGET_RS0.SEQ_DOCUMENTO_NOTIFICACAO = -1 THEN NULL ELSE TN.DAT_EMISSAO END DAT_EMISSAO,
            CASE WHEN ((SIGET_RS0.SEQ_DOCUMENTO_NOTIFICACAO = -1) OR (TN.DAT_CIENCIA = '9999-12-31')) THEN NULL ELSE TN.DAT_CIENCIA END DAT_CIENCIA
        FROM SIGET_RS0
        INNER JOIN DMT_MONITORAMENTO_FISCAL.D_DOC_MONITORAMENTO TN
            ON (TN.SEQ_DOCUMENTO = SIGET_RS0.SEQ_DOCUMENTO_NOTIFICACAO)
    ),
    DEBITO_RS0 AS (
        SELECT
            F.COD_CGF,
            F.NUM_MES_ANO_REFERENCIA,
            F.DAT_VENCIMENTO,
            R.COD_RECEITA,
            R.DSC_RECEITA,
            P.COD_RECEITA COD_RECEITA_PARC,
            P.DSC_RECEITA DSC_RECEITA_PARC,
            O.COD_ORIGEM,
            O.DSC_ORIGEM,
            SUM(F.VLR_PRINCIPAL_ATUAL) VLR_PRINCIPAL_ATUAL,
            SUM(F.VLR_MULTA_ATUAL) VLR_MULTA_ATUAL,
            SUM(F.VLR_JUROS_ATUAL) VLR_JUROS_ATUAL
        FROM DMT_DEBITO.F_DEBITO_ATUAL F
        INNER JOIN DMT_ARRECADA.D_RECEITA R ON (R.SEQ_RECEITA = F.SEQ_RECEITA_DEBITO)
        INNER JOIN DMT_ARRECADA.D_RECEITA P ON (P.SEQ_RECEITA = F.SEQ_RECEITA_PARCELAMENTO)
        INNER JOIN 
            DMT_DEBITO.D_ORIGEM O 
            ON (O.SEQ_ORIGEM = F.SEQ_ORIGEM_DEBITO) 
            AND O.COD_ORIGEM NOT IN (5, 6, 98) 
        WHERE 
            F.COD_CGF NOT IN (-2, -1) 
            AND F.DAT_VENCIMENTO < TODAY() 
            AND NOT (F.SEQ_PARCELAMENTO > 0 AND F.DAT_VENCIM_PROX_PARCELA > TODAY())
        GROUP BY F.COD_CGF, F.NUM_MES_ANO_REFERENCIA, F.DAT_VENCIMENTO, R.COD_RECEITA, R.DSC_RECEITA, P.COD_RECEITA, P.DSC_RECEITA, O.COD_ORIGEM, O.DSC_ORIGEM
    ),
    CAF AS (
        SELECT DISTINCT 
            F.COD_CGF, 
            CAST(DATEFORMAT(F.DAT_INI_PER_FISC, 'YYYYMM') AS INTEGER) ANOMES_INI_PER_FISC, 
            CAST(DATEFORMAT(F.DAT_FIM_PER_FISC, 'YYYYMM') AS INTEGER) ANOMES_FIM_PER_FISC 
        FROM DMT_CAF.F_ACA_FIS_TERMO F 
        INNER JOIN 
            DMT_CAF.D_PRO_FISCALIZACAO P 
            ON (P.SEQ_PRO_FISCALIZACAO = F.SEQ_PRO_FISCALIZACAO) 
        INNER JOIN 
            DMT_CAF.D_MOT_ACAO_FISCAL M 
            ON (M.SEQ_MOT_ACAO_FISCAL = F.SEQ_MOT_ACAO_FISCAL) 
        INNER JOIN 
            DMT_CAF.D_STATUS S 
            ON (S.SEQ_STATUS = F.SEQ_STA_SOLICITACAO) 
            AND S.COD_STATUS NOT IN (3, 6, 9, 11) 
        WHERE 
            F.NUM_ATO_DESIGNATORIO > 0 
            AND ( 
                P.COD_PROJETO = 71 
                OR( 
                P.COD_PROJETO = 81 
                    AND M.COD_MOT_ACAO_FISCAL IN ( 
                        812800, 
                        813600, 
                        814001, 
                        814002 
                    ) 
                ) 
            ) 
    ),


    MONITORAMENTO AS (
    	SELECT MAX(MONITORAMENTO.DDM) DATA_FIM, MONITORAMENTO.CC COD_CGF FROM (
			SELECT DISTINCT 
				DDM.DAT_FIM_MONITORAMENTO DDM, 
				F.COD_CGF CC
			FROM
				DMT_MONITORAMENTO_FISCAL.D_DOC_MONITORAMENTO ddm 
			LEFT JOIN 
				DMT_MONITORAMENTO_FISCAL.F_MONIT_TERMO_NOTIFICACAO F 
				ON (DDM.SEQ_DOCUMENTO = F.SEQ_DOCUMENTO_ENCERRAM)
				AND (DDM.COD_TIP_DOC_MONITORAMENTO = 4)
			WHERE DDM.DAT_FIM_MONITORAMENTO = (
				SELECT 
					DDM2.DAT_FIM_MONITORAMENTO 
				FROM DMT_MONITORAMENTO_FISCAL.D_DOC_MONITORAMENTO ddm2
				WHERE DDM2.DAT_FIM_MONITORAMENTO = DDM.DAT_FIM_MONITORAMENTO
				GROUP BY DDM2.DAT_FIM_MONITORAMENTO
			)AND F.COD_CGF IS NOT NULL
		) AS MONITORAMENTO
	GROUP BY MONITORAMENTO.DDM, MONITORAMENTO.CC
    ),


    DEBITO AS ( 
        SELECT DISTINCT 
            DEBITO_RS0.*, 
            MONITORAMENTO.DATA_FIM,
            (CASE WHEN CAF.COD_CGF IS NULL THEN 0 ELSE 1 END) SIT_ACAO_FIS_CAF 
        FROM DEBITO_RS0 
        LEFT JOIN CAF 
            ON ( 
                CAF.COD_CGF = DEBITO_RS0.COD_CGF 
                AND DEBITO_RS0.NUM_MES_ANO_REFERENCIA BETWEEN CAF.ANOMES_INI_PER_FISC AND CAF.ANOMES_FIM_PER_FISC 
            )
        LEFT JOIN MONITORAMENTO 
        	ON (
        		DEBITO_RS0.COD_CGF = MONITORAMENTO.COD_CGF
        	)
    ), 
    DAT_PROCESSAMENTO_DEBITO AS (
        SELECT 0 AS KEY00, DATE(DATEADD(DD, -2, MIN(DAT_CARGA))) DAT_PROCESSAMENTO FROM DMT_DEBITO.F_DEBITO_ATUAL
    )
    SELECT
        CON.COD_CNPJ,
        CON.COD_CGF,
        UPPER(CON.DSC_RAZAO_SOCIAL) DSC_RAZAO_SOCIAL,
        -- CON.COD_REGIME_REC_CONTRIBUINTE,
        CON.DSC_REGIME_REC_CONTRIBUINTE,
        -- CON.COD_SEGMENTO,
        CON.DSC_SEGMENTO,
        -- CON.COD_NUCLEO_COORDENACAO,
        CON.DSC_NUCLEO_COORDENACAO,
        -- CON.COD_CELULA_EXECUCAO,
        CON.DSC_CELULA_EXECUCAO,
        -- CON.COD_AREA_EXECUTORA,
        CON.DSC_AREA_EXECUTORA,
        --CON.COD_SIT_ATU_CONTRIBUINTE,
        CON.DSC_SIT_ATU_CONTRIBUINTE,
        DEBITO.SIT_ACAO_FIS_CAF,
        (CASE WHEN SIGET.COD_CGF IS NULL THEN 0 ELSE 1 END) SIT_CONTRIB_MONITORADO, 
        COALESCE(SIGET.SIT_CONTRIB_NOTIFICADO, 0)           SIT_CONTRIB_NOTIFICADO, 
        COALESCE(SIGET."Monitoramento Fiscal Padrão",0) "Monitoramento Fiscal Padrão",
        COALESCE(SIGET."Monitoramento Fiscal Maiores Contribuintes",0) "Monitoramento Fiscal Maiores Contribuintes",
        COALESCE(SIGET."Monitoramento Especial",0) "Monitoramento Especial",
        COALESCE(SIGET."Monitoramento Fiscal COMEX",0) "Monitoramento Fiscal COMEX",
        COALESCE(SIGET."Monitoramento Fiscal CEARF",0) "Monitoramento Fiscal CEARF",
        COALESCE(SIGET."Não se aplica",0) "Não se aplica",
        COALESCE(SIGET."Não classificado",0) "Não classificado",
        COALESCE(SIGET.NUM_PAM, 0) NUM_PAM,
        COALESCE(SIGET.NUM_TN, 0) NUM_TN,
        COALESCE(SIGET.DAT_EMISSAO, NULL) DAT_EMISSAO_TN,
        COALESCE(SIGET.DAT_CIENCIA, NULL) DAT_CIENCIA_TN, 

        DEBITO.NUM_MES_ANO_REFERENCIA,
        CAST(DEBITO.NUM_MES_ANO_REFERENCIA AS DECIMAL) AS NUM_MES_ANO_REFERENCIA2,

        DEBITO.DAT_VENCIMENTO,
        DEBITO.DATA_FIM,
        DEBITO.COD_RECEITA,
        DEBITO.DSC_RECEITA,
        DEBITO.COD_RECEITA_PARC,
        DEBITO.DSC_RECEITA_PARC,
        DEBITO.COD_ORIGEM,
        DEBITO.DSC_ORIGEM,
        DAT_PROCESSAMENTO_DEBITO.DAT_PROCESSAMENTO DAT_ATUALIZACAO_DADOS,
        COALESCE(DEBITO.VLR_PRINCIPAL_ATUAL, -0)            VLR_PRINCIPAL_ATUAL,
        COALESCE(DEBITO.VLR_MULTA_ATUAL, -0)                VLR_MULTA_ATUAL,
        COALESCE(DEBITO.VLR_JUROS_ATUAL, -0)                VLR_JUROS_ATUAL,
        (DEBITO.VLR_PRINCIPAL_ATUAL + VLR_MULTA_ATUAL + DEBITO.VLR_JUROS_ATUAL)  VLR_SALDO_DEBITO
    FROM DWC_DIMENSAO.D_CONTRIBUINTE_ATUAL CON
    INNER JOIN DAT_PROCESSAMENTO_DEBITO ON (DAT_PROCESSAMENTO_DEBITO.KEY00 = 0)
    INNER JOIN DEBITO ON (DEBITO.COD_CGF = CON.COD_CGF)
    LEFT JOIN SIGET ON (SIGET.COD_CGF = CON.COD_CGF)
	WHERE 
        CON.COD_SIT_ATU_CONTRIBUINTE IN (1,3,5,8,10)-- (1) - ATIVO , (3) - BAIXADO A PEDIDO ,(5) - BAIX. DE OFICIO ,(8) - ATIVO (EM EDITAL), (10) - EM PROCESSO DE BAIXA
        AND DEBITO.NUM_MES_ANO_REFERENCIA > CAST(DATEFORMAT(DATEADD(YEAR, -5,GETDATE()),'YYYYMM') AS INT)
